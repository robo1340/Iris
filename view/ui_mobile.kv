<Spacer@Label>:
    canvas: 
        Color: 
            rgb: [0,0,0, 1]
        Rectangle: 
            pos: self.pos 
            size: self.size 
    size_hint : (1, None)
    height : 10
    name : ''

<MiniLabel@Label>:
    canvas.before:
        Color:
            rgba: [0.5, 0.5, 0.5, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height  
    size_hint : (None, None)
    width : self.texture_size[0]
    height : self.texture_size[1] #make the label just tall enough to fit all the text
    font_size: '15dp'
    halign: 'left'
    color: [0,0,0,1]
    padding_x : 3

<SmallLabel@Label>:
    canvas.before:
        Color:
            rgba: [0.5, 0.5, 0.5, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height  
    size_hint : (1, None)
    height : self.texture_size[1] #make the label just tall enough to fit all the text
    text_size: (self.width, None)
    font_size: '20dp'
    
    text_size: self.size
    halign: 'left'
    color: [0,0,0,1]
    padding_x : 3

<MediumLabel@Label>:
    canvas.before:
        Color:
            rgba: [0.5, 0.5, 0.5, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    size_hint : (1, None)
    height : self.texture_size[1] #make the label just tall enough to fit all the text
    text_size: (self.width, None)
    font_size: '32dp'
    #text_size: self.size
    halign: 'left'
    color: [0,0,0,1]
    padding_x : 3

<SmallToggleButton@ToggleButton>:
    canvas.before:
        Color:
            rgba: [0.5, 0.5, 0.5, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    size_hint : (1, None)
    halign: 'center'
    height : self.texture_size[1] #make the label just tall enough to fit all the text
    text_size: (self.width, None)
    font_size: '32dp'
    text_size: self.size
    
<SmallButton@Button>:
    canvas.before:
        Color:
            rgba: [0.5, 0.5, 0.5, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    size_hint : (1, None)
    halign: 'center'
    height : self.texture_size[1] #make the label just tall enough to fit all the text
    text_size: (self.width, None)
    font_size: '32dp'
    text_size: self.size

<MenuButton@Button>:
    size_hint_x : 0.15
    #size_hint_x : None
    #width : self.height
    height : self.width
    border : (1,1,1,1)
    
<ReturnButton@Button>:
    name : 'return_button'
    text: "Return"
    size_hint_y : 1.0
    size_hint_min_y : 100
    size_hint_max_y : 200
    size_hint_x : None
    width : self.height
    background_normal: './resources/icons/return.png'
    background_down: './resources/icons/return_pressed.png'
    border : (1,1,1,1)
    
<PropertyLabel@BoxLayout>:
    id : property
    orientation: 'horizontal'
    key_text : 'default'
    value_text : '0'
    size_hint : (1, None)
    height : key.height
    MediumLabel:
        size_hint_x : 0.5
        id : key
        text: property.key_text
    MediumLabel:
        size_hint_x : 0.5
        id : value
        text: property.value_text
        halign : 'right'

<GPSPropertyLabel@BoxLayout>:
    id : property
    orientation: 'horizontal'
    key_text : 'default'
    value_text : '0'
    size_hint : (1, None)
    height : key.height
    SmallLabel:
        size_hint_x : 0.25
        id : key
        text: property.key_text
    SmallLabel:
        size_hint_x : 0.75
        id : value
        text: property.value_text
        halign : 'right' 

<SetableProperty@BoxLayout>:
    id : property
    orientation: 'horizontal'
    size_hint : (1, None)
    height : key.height
    text : '750'
    value: value
    MediumLabel:
        id : key
        text: 'Carrier(ms):'
    TextInput:
        multiline : False
        padding : [1,1,1,1]
        font_size: '35dp'
        id : value
        text: property.text
        halign : 'left'
        valign : 'center'
        on_text : app.setable_property_changed(self.parent) 
    
<SetablePropertyWaypoint@BoxLayout>:
    id : property
    orientation: 'horizontal'
    size_hint : (1, None)
    height : paste.height
    text : '750'
    coordinates : coordinates
    SmallButton:
        id : paste
        name : 'paste'
        text: '>'
        size_hint : (0.2,1)
        on_release: 
            app.waypoint_paste_pressed(self.parent, self)
    MiniLabel:
        size_hint : (1, None)
        text : ''
        id : coordinates
        name : 'coordinates'
    SmallButton:
        id : clear
        name : 'clear'
        text: 'X'
        color: 1,0,0,1
        size_hint : (0.2,1)
        on_release: 
            app.waypoint_paste_pressed(self.parent, self)   
 
    
<DiscreteSelector@BoxLayout>:
    id : selector
    option1_text : ''
    option2_text : ''
    option3_text : ''
    option4_text : ''
    option1_name : ''
    option2_name : ''
    option3_name : ''
    option4_name : ''
    orientation: 'horizontal' 
    size_hint_y : None
    height : option1.height
    
    SmallToggleButton:
        id : option1
        text: selector.option1_text
        name : selector.option1_name
        on_press: app.selector_pressed(selector,self)
        #state : 'down'
    
    SmallToggleButton:
        id : option2
        text: selector.option2_text
        name : selector.option2_name
        on_press: app.selector_pressed(selector,self)
    
    SmallToggleButton:
        id : option3
        text: selector.option3_text
        name : selector.option3_name
        on_press: app.selector_pressed(selector,self)
    
    SmallToggleButton:
        id : option4
        text: selector.option4_text
        name : selector.option4_name
        on_press: app.selector_pressed(selector,self)

<TextMessage>: #extends box layout, is instantiated in ui_kivy.py
    size_hint : (1, None)
    height : message_header.height + message_body.height
    id : message_widget
    orientation: 'vertical'
    header_text : ''
    time_text   : ''
    message_text: ''
    background_color : [1,1,1,1]
    canvas:
        Color:
            rgba: [0, 0, 0, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    canvas.before:
        Color:
            rgba: message_widget.background_color
        Rectangle:
            size: self.size
            pos: self.pos
            

    BoxLayout:
        id : message_header
        orientation : 'horizontal'
        size_hint : (1,None)
        height : lbl.height
        MiniLabel:
            id : lbl
            text : message_widget.header_text
        MiniLabel:
            text : message_widget.time_text
      
    Label:
        id : message_body
        size_hint : (1, None)
        height : self.texture_size[1] #make the label just tall enough to fit all the text
        text_size: (self.width, None)
        font_size: '20dp'
        halign: 'left'
        valign: 'top'
        color: [0,0,0,1]
        padding_x : 5
        padding_y : 3
        text : message_widget.message_text

<ContactLabel>: #extends box layout, is instantiated in ui_kivy.py
    size_hint : (1, None)
    height : message_header.height
    id : contact_widget
    orientation: 'vertical'
    callsign_text : ''
    time_text     : ''
    background_color : [1,1,1,1]
    canvas:
        Color:
            rgba: [0, 0, 0, 1]
        Line:
            width: 1
            rectangle: self.x, self.y, self.width, self.height
    canvas.before:
        Color:
            rgba: contact_widget.background_color
        Rectangle:
            size: self.size
            pos: self.pos
    
    BoxLayout:
        id : message_header
        orientation : 'horizontal'
        size_hint : (1,None)
        height : lbl.height
        MediumLabel:
            id : lbl
            text : contact_widget.callsign_text
        MediumLabel:
            text : contact_widget.time_text
        
    #Label:
    #    id : spacer
        
    #Button:
    #    id : chat_button
        #on_release:
        #    app.root.current = "main"
        #    root.manager.transition.direction = "left" 

###################################################################        
####################### Window Manager ############################
###################################################################

WindowManager:
    MainWindow:
        id : main_window
    SettingsWindow:
        id : settings_window
    StatisticsWindow:
        id : statistics_window
    GPSWindow:
        id : gps_window  
    ChatWindow :
        id : chat_window
    WaypointWindow :
        id : waypoint_window

###################################################################        
########################## Main Window ############################
###################################################################

<MainWindow>:
    name : 'main'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    white               : [0.9,0.9,0.9,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    indicator_pre_rx_color      : [0.2,0.2,1,1]
    indicator_rx_color          : [0,0,1,1]
    indicator_tx_color          : [1,0,0,1]
    indicator_success_color     : [0,1,0,1]
    
    signal_low_color            : [0.6,0,0,1]
    signal_high_color           : [1,0,0,1]
    signal_correct_color        : [0,0.75,0,1]
    signal_strength_color       : [1,1,1,1]
    
    #radius and angle of the gauge
    #radius : self.height/2
    guage_x : 0
    guage_y : 0

    
    toggle_button_color         : [0,1,0,1]
    
    signal_strength : '0.00'
    
    top_rowh : 0.1
    center_rowh : 0.6
    
    BoxLayout:
        orientation: 'vertical'
        name : 'root_main'
        
        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos

    ########################### First Row ####################################    
        BoxLayout: #first row
            canvas.before:
                Color:
                    rgba: [0.5, 0.5, 0.5, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            #id : menu_bar
            id : first_row
            name : 'first_row'
            size_hint : (1, root.top_rowh)
            size_hint_max_y : 200
            orientation: 'horizontal'
            
            
            MenuButton: 
                name : 'settings_menu_button'
                background_color : root.background_color
                background_normal: './resources/icons/settings.png'
                background_down: './resources/icons/settings_pressed.png'
                on_release: 
                    app.root.current = "settings"
                    root.manager.transition.direction = "right"
                    
            MenuButton: 
                name : 'chat_menu_button'
                background_color : root.background_color
                background_normal: './resources/icons/chat.png'
                background_down: './resources/icons/chat_pressed.png'
                on_release: 
                    app.chat_viewed()
                    app.root.current = "chat"
                    root.manager.transition.direction = "right"
            
            #MenuButton: 
            #    name : 'stats_menu_button'
            #    background_color : root.background_color
            #    background_normal: './resources/icons/stats.png'
            #    background_down: './resources/icons/stats_pressed.png'
            #    on_release: 
            #        app.root.current = "stats"
            #        root.manager.transition.direction = "right"

            MenuButton: 
                name : 'waypoint_menu_button'
                background_color : root.background_color
                background_normal: './resources/icons/waypoint.png'
                background_down: './resources/icons/waypoint_pressed.png'
                on_release: 
                    app.root.current = "waypoint"
                    root.manager.transition.direction = "right"
    
            MenuButton: 
                name : 'gps_menu_button'
                background_color : root.background_color
                background_normal: './resources/icons/gps.png'
                background_down: './resources/icons/gps_pressed.png'
                on_release: 
                    app.root.current = "gps"
                    root.manager.transition.direction = "right"

            Label:
                size_hint_x : 0.15
                name : ''
                color : root.black
                canvas.before:
                    Color:
                        rgba: root.gray
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height
            
            Label:
                name : 'signal_strength_indicator'
                text : root.signal_strength
                canvas.before:
                    Color:
                        rgba: [0.5, 0.5, 0.5, 1]
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height  
                    Color: 
                        rgb: root.signal_strength_color
                    Rectangle: 
                        pos: self.pos 
                        size: self.size
                canvas: 
                    Color: 
                        rgba: root.black
                    Line: 
                        points: [self.x + self.width/2, self.y + self.height/4, self.x + self.width/2 + root.guage_x, self.y + self.height/4 + root.guage_y]
                        width : 5
                
                size_hint_x : None
                width : self.height
                text_size: (self.width, None)
                font_size: '20dp'

                text_size: self.size
                halign: 'center'
                valign: 'center'
                color: [0,0,0,1]
                padding_x : 3
            
            GridLayout:
                cols : 2
                rows : 2
                name : 'status_indicators'
                anchor_x : 'left'
                anchor_y : 'top'
                size_hint_x : None
                width : self.height
    
                Image:
                    name : 'squelch'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_pre_rx_color
    
                Image:
                    name : 'receiver'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_rx_color
    
                Image:
                    name : 'transmitter'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_tx_color
    
                Image:
                    name : 'receiver_success'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_success_color
                           
    ########################### Second Row ####################################            
        BoxLayout: #next row
            name : 'second_row'
            orientation: 'vertical'    
            canvas.before:
                Color:
                    rgba: [0.5, 0.5, 0.5, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            
            MediumLabel:
                name : ''
                text : 'Contacts'   
    
            Spacer:
    
            ScrollView: 
                name : 'scroll_bar'
                do_scroll_x: False
                do_scroll_y: True
                bar_width : 10
                bar_inactive_color : self.bar_color
                canvas.before:
                    Color:
                        rgba: root.gray
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height 
                GridLayout:
                    name : 'message_container'
                    id : message_container
                    cols: 1
                    size_hint_y: None
                    height: self.minimum_height


###################################################################        
########################## Chat Window ############################
###################################################################

<ChatWindow>:
    name : 'chat'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    text_msg_color      : [0.9, 0.9, 0.9, 1]
    text_msg_at_color   : [1, 0.25, 0.25, 1]
    text_msg_color_ack_pending   : [1,0.5,0.5,1]
    text_msg_color_ack_received  : [0,1,0,1]
    text_msg_color_no_ack_expect : [0.9,1,0.8,1]
    
    indicator_pre_rx_color      : [0.2,0.2,1,1]
    indicator_rx_color          : [0,0,1,1]
    indicator_tx_color          : [1,0,0,1]
    indicator_success_color     : [0,1,0,1]
    
    top_rowh : 0.1
    center_rowh : 0.6
    bottom_rowh : 0.3
    
    BoxLayout:
        orientation: 'vertical'
        name : 'root_chat'
        
        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos

    ########################### First Row ####################################    
        BoxLayout: #first row
            canvas.before:
                Color:
                    rgba: [0.5, 0.5, 0.5, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            id : first_row
            name : 'first_row'
            size_hint : (1, root.top_rowh)
            size_hint_max_y : 200
            orientation: 'horizontal'
            
            ReturnButton:
                on_release:
                    app.root.current = "main"
                    root.manager.transition.direction = "left" 

            Label:
                #text : 'placeholder'
                name : ''
                color : root.black
                canvas.before:
                    Color:
                        rgba: root.gray
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height
    
            GridLayout:
                cols : 2
                rows : 2
                name : 'status_indicators'
                anchor_x : 'left'
                anchor_y : 'top'
                size_hint_x : None
                width : self.height
    
                Image:
                    name : 'squelch'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_pre_rx_color
    
                Image:
                    name : 'receiver'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_rx_color
    
                Image:
                    name : 'transmitter'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_tx_color
    
                Image:
                    name : 'receiver_success'
                    source : './resources/indicator.gif'
                    allow_stretch : True
                    anim_delay : -1
                    anim_loop : 1
                    color : root.indicator_success_color
                
                
    ########################### Second Row ####################################            
        BoxLayout: #next row
            name : 'second_row'
            orientation: 'horizontal'    
            size_hint : (1, root.center_rowh)
            canvas.before:
                Color:
                    rgba: [0.5, 0.5, 0.5, 1]
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
            
            ScrollView: 
                name : 'scroll_bar'
                do_scroll_x: False
                do_scroll_y: True
                bar_width : 10
                bar_inactive_color : self.bar_color
                canvas.before:
                    Color:
                        rgba: root.gray
                    Line:
                        width: 1
                        rectangle: self.x, self.y, self.width, self.height 
                GridLayout:
                    name : 'message_container'
                    id : message_container
                    cols: 1
                    size_hint_y: None
                    height: self.minimum_height

    ########################### Third Row ####################################
        BoxLayout: #final row
            name : 'third_row'
            id : third_row
            orientation: 'vertical'    
            size_hint : (1, root.bottom_rowh) 
            
            SmallButton:
                text: 'SEND'
                name : 'send'
                on_release: app.sendMessage(text_input)
        
            TextInput:
                name : 'text_input'
                id : text_input
                size_hint: (1, 1)
                #focus : True


###################################################################        
######################## Settings Window ##########################
###################################################################

<SettingsWindow>:
    name: 'settings'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    BoxLayout: #settings widgets container
        name : 'settings_root'
        #id : third_row
        orientation: 'vertical'  

        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos        
        
        AnchorLayout: 
            anchor_x : 'left'
            anchor_y : 'top'
            name : ''
            ReturnButton:
                on_release:
                    app.root.current = "main"
                    root.manager.transition.direction = "left" 
        
        MediumLabel:
            name : ''
            text: 'Version: 1.0.0' 
            halign : 'center'
    
        SetableProperty:
            name : 'my_callsign'
            
        SetableProperty:
            name : 'dst_callsign'
            
        SmallToggleButton:
            text: 'Enable Vibration'
            id: enableVibration
            name : 'enableVibration'
            on_state: app.toggle_pressed(self)
         
        Spacer:

        #SmallToggleButton:
        #    text: 'Auto Scroll to Latest?'
        #    id: autoScroll
        #    name : 'autoScroll'
        #    on_state: app.toggle_pressed(self)
        
        MediumLabel:
            name : ''
            text: 'Network Settings'  
            halign : 'center'

        SmallToggleButton:
            text: 'Ack?'
            id: ackChecked
            name : 'ackChecked'
            on_state: app.toggle_pressed(self)
    
        SmallToggleButton:
            text: 'Double Ack?'
            id: doubleAckChecked
            name : 'doubleAckChecked'
            on_state: app.toggle_pressed(self)
    
        SmallToggleButton:
            text: 'Enable Forwarding?'
            id: enableForwarding
            name : 'enableForwarding'
            on_state: app.toggle_pressed(self)
    
        SetableProperty:
            name : 'carrier_length'
        
        Spacer:
    
        MediumLabel:
            name : 'hops_lbl'
            text: 'Number of Hops'  
            halign : 'center'
        
        DiscreteSelector:
            disabled : False
            option1_text : '0'
            option2_text : '1'
            option3_text : '2'
            option4_text : '3'
            option1_name : '0'
            option2_name : '1'
            option3_name : '2'
            option4_name : '3'
            name : 'num_hops'
    
        Spacer:
    
        SmallButton:
            text: 'Clear Messages'
            name: 'clear_messages'
            on_release: app.button_pressed(self)
    
        Label:
            name : ''
            color : root.black
            canvas.before:
                Color:
                    rgba: root.gray
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
    
        SmallButton:
            text: 'Close App'
            name : 'close_nobob'
            on_release: app.button_pressed(self)
    
###################################################################        
####################### Statistics Window #########################
###################################################################

<StatisticsWindow>:
    name: 'stats'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    BoxLayout: #statistics widgets container
        name : 'root_stats'
        orientation: 'vertical'  

        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos        
        
        AnchorLayout: #lower left tool panel
            anchor_x : 'left'
            anchor_y : 'top'
            name : ''
            ReturnButton:
                on_release:
                    app.root.current = "main"
                    root.manager.transition.direction = "left" 
            
        PropertyLabel:
            name : 'tx_success_cnt'
            key_text : 'txs'
            value_text : '0'
        PropertyLabel:
            name : 'tx_failure_cnt'
            key_text : 'txf'
            value_text : '0'
        PropertyLabel:
            name : 'rx_success_cnt'
            key_text : 'rxs'
            value_text : '0'
        PropertyLabel:
            name : 'rx_failure_cnt'
            key_text : 'rxf'
            value_text : '0'
        
        #SmallToggleButton:
        #    text: 'Test tx?'
        #    id: testTxVar
        #    name : 'testTxVar'
        #    on_state: app.toggle_pressed(self)

###################################################################        
######################## Waypoint Window ##########################
###################################################################

<WaypointWindow>:
    name: 'waypoint'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    BoxLayout: #waypoint widgets container
        name : 'root_waypoint'
        orientation: 'vertical'  
        size_hint : (1,1)
        spacer_height : 30

        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos        
        
        ReturnButton:
            on_release:
                app.root.current = "main"
                root.manager.transition.direction = "left" 
        
        SmallToggleButton:
            text: 'Enable Waypoint Beacon'
            name : 'enableWaypoint'
            on_state: app.toggle_pressed(self)
    
        MediumLabel:
            name : ''
            text : 'Current Waypoints Set'
            halign: 'center'
    
        Spacer:
            height: self.parent.spacer_height
        SetablePropertyWaypoint:
            name : "coordinates1"
    
        Spacer:
            height: self.parent.spacer_height
        SetablePropertyWaypoint:
            name : "coordinates2"
    
        Spacer:
            height: self.parent.spacer_height
        SetablePropertyWaypoint:
            name : "coordinates3"
    
        Spacer:
            height: self.parent.spacer_height
        SmallButton:
            text: 'Send Waypoint Now'
            name : 'tx_waypoint_manual'
            #on_release: app.sendGPSBeacon()
 
        PropertyLabel:
            name : 'current_waypoint_period'
            key_text : 'period(sec)'
            value_text : '0'
 
        Spinner:
            size_hint : (1, None)
            height : self.texture_size[1] #make the label just tall enough to fit all the text
            text_size: (self.width, None)
            font_size: '32dp'
            text_size: self.size
        
            name : 'waypoint_period'
            text_autoupdate : False
            values: '30','60','90','120','180','240','300','360','600'
            halign: 'center'
            on_text: app.spinner_pressed(self)   
        
        Spacer:
        
        Label:
            name : ''
            color : root.black
            canvas.before:
                Color:
                    rgba: root.gray
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height
    
        MediumLabel:
            name : ''
            text: 'Osmand Settings' 
            halign : 'center'
    
        SmallButton:
            text: 'Force Sync Osmand'
            name : 'force_sync_osmand_waypoints'
            on_release: app.button_pressed(self)
    
        SmallButton:
            text: 'Clear Osmand Waypoints'
            name : 'clear_osmand_waypoints'
            on_release: app.button_pressed(self)
    

    
###################################################################        
########################## GPS Window #############################
###################################################################

<GPSWindow>:
    name: 'gps'
    
    ### Define colors ###
    background_color    : [1,1,1,1]
    black               : [0,0,0,1]
    gray                : [0.5, 0.5, 0.5, 1]
    
    BoxLayout: #gps widgets container
        name : 'root_gps'
        orientation: 'vertical'  
        size_hint : (1,1)

        canvas.before:
            Color:
                rgba: root.background_color
            Rectangle:
                size: self.size
                pos: self.pos        
        
        ReturnButton:
            on_release:
                app.root.current = "main"
                root.manager.transition.direction = "left" 
        
        SmallToggleButton:
            text: 'Enable GPS Beacon'
            #id: enableGPS
            name : 'enableGPS'
            on_state: app.toggle_pressed(self)
    
        SmallToggleButton:
            text: 'Include GPS in Acks?'
            #id: enableGPS
            name : 'gpsAck'
            on_state: app.toggle_pressed(self)
            
        MediumLabel:
            name : ''
            text : 'My GPS info'
            halign: 'center'
        
        SmallLabel:
            name : 'gps_lock_label'
            text : 'Waiting for GPS signal'
            halign : 'center'
    
        GPSPropertyLabel:
            name : 'latitude'
            key_text : 'lat.'
            value_text : '0'
            
        GPSPropertyLabel:
            name : 'longitude'
            key_text : 'long.'
            value_text : '0'
            
        GPSPropertyLabel:
            name : 'altitude'
            key_text : 'alt.'
            value_text : '0'
            
        SmallButton:
            text: 'Send Beacon Now'
            name : 'tx_gps_manual'
            on_release: app.sendGPSBeacon()
 
        PropertyLabel:
            name : 'current_gps_beacon_period'
            key_text : 'period(sec)'
            value_text : '0'
 
        Spinner:
            size_hint : (1, None)
            height : self.texture_size[1] #make the label just tall enough to fit all the text
            text_size: (self.width, None)
            font_size: '32dp'
            text_size: self.size
        
            name : 'gps_beacon_period'
            text_autoupdate : False
            values: '30','60','90','120','180','240','300','360','600'
            halign: 'center'
            on_text: app.spinner_pressed(self)   
        
        Spacer:
        
        MediumLabel:
            name : ''
            text: 'Osmand Settings' 
            halign : 'center'
    
        SmallButton:
            text: 'Force Sync Osmand'
            name : 'force_sync_osmand'
            on_release: app.button_pressed(self)
    
        SmallButton:
            text: 'Clear Osmand Contacts'
            name : 'clear_osmand_contacts'
            on_release: app.button_pressed(self)
    
        #MediumLabel:
        #    name : ''
        #    text : 'GPS Message Log'
        #    halign: 'center'
        
        ScrollView: 
            name : 'scroll_bar'
            do_scroll_x: False
            do_scroll_y: True
            bar_width : 10
            bar_inactive_color : self.bar_color
            size_hint_y : 0.5
            on_scroll_stop : self.canvas.ask_update() #try to reload the widget whenever a user scrolls it
            canvas.before:
                Color:
                    rgba: root.gray
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height 
            GridLayout:
                name : 'message_container'
                id : message_container
                cols: 1
                size_hint_y: None
                height: self.minimum_height 
               
